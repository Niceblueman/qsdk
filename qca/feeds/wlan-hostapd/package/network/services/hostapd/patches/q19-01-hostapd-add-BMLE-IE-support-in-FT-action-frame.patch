From 524204e28bfdd694766a48485aaedb44bb704c98 Mon Sep 17 00:00:00 2001
From: Karthik M <quic_karm@quicinc.com>
Date: Wed, 9 Aug 2023 17:18:54 +0530
Subject: [PATCH] hostapd: add BMLE IE support in FT action frame

FT Response frame transmitted by the current associated AP as response to
the STA FT Request frame should contain the BMLE IE.

Signed-off-by: Karthik M <quic_karm@quicinc.com>
---
 src/ap/wpa_auth.h      |  1 +
 src/ap/wpa_auth_ft.c   | 13 +++++++++++++
 src/ap/wpa_auth_glue.c |  8 +++++++-
 3 files changed, 21 insertions(+), 1 deletion(-)

--- a/src/ap/wpa_auth.h
+++ b/src/ap/wpa_auth.h
@@ -368,6 +368,8 @@ struct wpa_auth_callbacks {
 			      const u8 *data, size_t data_len);
 	int (*add_tspec)(void *ctx, const u8 *sta_addr, u8 *tspec_ie,
 			 size_t tspec_ielen);
+	u8* (*add_bmle)(void *ctx, u8 *bmle_ie, u32 type, void *ml_data);
+	size_t (*add_bmle_len)(void *ctx, u32 type, void *ml_data);
 #endif /* CONFIG_IEEE80211R_AP */
 #ifdef CONFIG_MESH
 	int (*start_ampe)(void *ctx, const u8 *sta_addr);
--- a/src/ap/wpa_auth_ft.c
+++ b/src/ap/wpa_auth_ft.c
@@ -773,6 +773,28 @@ static int wpa_ft_add_tspec(struct wpa_a
 				       tspec_ielen);
 }
 
+static u8 *wpa_ft_add_bmle(struct wpa_authenticator *wpa_auth,
+			   u8 *bmle_ie, u32 type,
+			   struct multi_link_data *ml_data)
+{
+	if (wpa_auth->cb->add_bmle == NULL) {
+		wpa_printf(MSG_DEBUG, "FT: add_bmle is not initialized");
+		return bmle_ie;
+	}
+	return wpa_auth->cb->add_bmle(wpa_auth->cb_ctx, bmle_ie, type,
+				      ml_data);
+}
+
+static size_t wpa_ft_add_bmle_len(struct wpa_authenticator *wpa_auth,
+			       u32 type,
+			       struct multi_link_data *ml_data)
+{
+	if (wpa_auth->cb->add_bmle_len == NULL) {
+		wpa_printf(MSG_DEBUG, "FT: add_bmle_len is not initialized");
+		return 0;
+	}
+	return wpa_auth->cb->add_bmle_len(wpa_auth->cb_ctx, type, ml_data);
+}
 
 #ifdef CONFIG_OCV
 static int wpa_channel_info(struct wpa_authenticator *wpa_auth,
@@ -3185,7 +3207,7 @@ static int wpa_ft_process_auth_req(struc
 	const u8 *identity, *radius_cui;
 	size_t identity_len = 0, radius_cui_len = 0;
 	int use_sha384;
-	size_t pmk_r1_len, kdk_len;
+	size_t pmk_r1_len, kdk_len, bmle_len;
 
 	*resp_ies = NULL;
 	*resp_ies_len = 0;
@@ -3355,8 +3377,10 @@ pmk_r1_derived:
 	}
 	wpa_ft_set_session_timeout(sm->wpa_auth, sm->encr_key_mac_addr, session_timeout);
 
+	bmle_len = wpa_ft_add_bmle_len(sm->wpa_auth, WLAN_FC_STYPE_AUTH, NULL);
+
 	buflen = 2 + sizeof(struct rsn_mdie) + 2 + sizeof(struct rsn_ftie) +
-		2 + FT_R1KH_ID_LEN + 200;
+		2 + FT_R1KH_ID_LEN + bmle_len + 200;
 	*resp_ies = os_zalloc(buflen);
 	if (*resp_ies == NULL)
 		goto fail;
@@ -3381,6 +3405,8 @@ pmk_r1_derived:
 		goto fail;
 	pos += ret;
 
+	pos = wpa_ft_add_bmle(sm->wpa_auth, pos, WLAN_FC_STYPE_AUTH, NULL);
+
 	*resp_ies_len = pos - *resp_ies;
 
 	return WLAN_STATUS_SUCCESS;
--- a/src/ap/wpa_auth_glue.c
+++ b/src/ap/wpa_auth_glue.c
@@ -1602,7 +1602,18 @@ static int hostapd_wpa_auth_add_tspec(vo
 	return hostapd_add_tspec(hapd, sta_addr, tspec_ie, tspec_ielen);
 }
 
+static u8 *hostapd_wpa_ft_add_bmle(void *ctx, u8 *bmle_ie, u32 type,
+				   void *mle_data)
+{
+	struct hostapd_data *hapd = ctx;
+	return hostapd_eid_basic_mle(hapd, bmle_ie, type, mle_data);
+}
 
+static size_t hostapd_wpa_ft_add_bmle_len(void *ctx, u32 type, void *mle_data)
+{
+	struct hostapd_data *hapd = ctx;
+	return hostapd_eid_basic_mle_len(hapd, type, mle_data);
+}
 
 static int hostapd_wpa_register_ft_oui(struct hostapd_data *hapd,
 				       const char *ft_iface)
@@ -1731,6 +1742,8 @@ int hostapd_setup_wpa(struct hostapd_dat
 		.add_sta = hostapd_wpa_auth_add_sta,
 		.add_sta_ft = hostapd_wpa_auth_add_sta_ft,
 		.add_tspec = hostapd_wpa_auth_add_tspec,
+		.add_bmle = hostapd_wpa_ft_add_bmle,
+		.add_bmle_len = hostapd_wpa_ft_add_bmle_len,
 		.set_vlan = hostapd_wpa_auth_set_vlan,
 		.get_vlan = hostapd_wpa_auth_get_vlan,
 		.set_identity = hostapd_wpa_auth_set_identity,
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -472,11 +472,11 @@ static void handle_auth_ft_finish(void *
 	struct sta_info *sta;
 	int reply_res;
 
-	sta = ap_get_sta(hapd, dst);
-	reply_res = send_auth_reply(hapd, sta, dst, bssid, WLAN_AUTH_FT,
+	reply_res = send_auth_reply(hapd, NULL, dst, bssid, WLAN_AUTH_FT,
 				    auth_transaction, status, ies, ies_len,
 				    "auth-ft-finish");
 
+	sta = ap_get_sta(hapd, dst);
 	if (sta == NULL)
 		return;
 
