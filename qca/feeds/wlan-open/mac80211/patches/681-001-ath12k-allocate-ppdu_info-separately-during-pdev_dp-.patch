From d7e7b5821ef5da0e10703ee1ae2956d72f48b91f Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Wed, 15 Feb 2023 14:25:15 -0800
Subject: [PATCH] ath12k: allocate ppdu_info separately during pdev_dp alloc

ppdu_info structure has 1024 MPDU array and it is currently present
in struct ath12k. So while allocating ar, kzalloc may fail to allocate
this much large contiguous memory. Hence allocating it separately during
monitor pdev attach.

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
Signed-off-by: Sidhanta Sahu <quic_sidhanta@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp.c     |  1 +
 drivers/net/wireless/ath/ath12k/dp.h     |  2 +-
 drivers/net/wireless/ath/ath12k/dp_mon.c |  4 +--
 drivers/net/wireless/ath/ath12k/dp_rx.c  | 43 +++++++++++++++++++++---
 drivers/net/wireless/ath/ath12k/dp_rx.h  |  1 +
 5 files changed, 43 insertions(+), 8 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp.c b/drivers/net/wireless/ath/ath12k/dp.c
index 4c0205f..db4cd94 100644
--- a/drivers/net/wireless/ath/ath12k/dp.c
+++ b/drivers/net/wireless/ath/ath12k/dp.c
@@ -1032,6 +1032,7 @@ void ath12k_dp_pdev_free(struct ath12k_base *ab)
 	for (i = 0; i < ab->num_radios; i++) {
 		ar = ab->pdevs[i].ar;
 		ath12k_dp_rx_pdev_free(ab, i);
+		ath12k_dp_rx_pdev_mon_detach(ab, i);
 		ath12k_debugfs_unregister(ar);
 	}
 }
diff --git a/drivers/net/wireless/ath/ath12k/dp.h b/drivers/net/wireless/ath/ath12k/dp.h
index 861b4ca..1bc1422 100644
--- a/drivers/net/wireless/ath/ath12k/dp.h
+++ b/drivers/net/wireless/ath/ath12k/dp.h
@@ -131,7 +131,7 @@ struct ath12k_pdev_dp {
 	struct dp_srng tx_mon_dst_ring[MAX_RXDMA_PER_PDEV];
 
 	struct ieee80211_rx_status rx_status;
-	struct ath12k_mon_data mon_data;
+	struct ath12k_mon_data *mon_data;
 };
 
 #define DP_NUM_CLIENTS_MAX 64
diff --git a/drivers/net/wireless/ath/ath12k/dp_mon.c b/drivers/net/wireless/ath/ath12k/dp_mon.c
index 0c4a776..b95326e 100644
--- a/drivers/net/wireless/ath/ath12k/dp_mon.c
+++ b/drivers/net/wireless/ath/ath12k/dp_mon.c
@@ -3596,7 +3596,7 @@ int ath12k_dp_mon_srng_process(struct ath12k *ar, int mac_id, int *budget,
 {
 	struct hal_mon_dest_desc *mon_dst_desc;
 	struct ath12k_pdev_dp *pdev_dp = &ar->dp;
-	struct ath12k_mon_data *pmon = (struct ath12k_mon_data *)&pdev_dp->mon_data;
+	struct ath12k_mon_data *pmon = pdev_dp->mon_data;
 	struct ath12k_base *ab = ar->ab;
 	struct ath12k_dp *dp = &ab->dp;
 	struct sk_buff *skb;
@@ -3742,7 +3742,7 @@ int ath12k_dp_mon_rx_process_stats(struct ath12k *ar, int mac_id,
 {
 	struct ath12k_base *ab = ar->ab;
 	struct ath12k_pdev_dp *pdev_dp = &ar->dp;
-	struct ath12k_mon_data *pmon = (struct ath12k_mon_data *)&pdev_dp->mon_data;
+	struct ath12k_mon_data *pmon = pdev_dp->mon_data;
 	struct hal_rx_mon_ppdu_info *ppdu_info = &pmon->mon_ppdu_info;
 	struct ath12k_dp *dp = &ab->dp;
 	struct hal_mon_dest_desc *mon_dst_desc;
diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index 82cc283..72cde24 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -4769,10 +4769,34 @@ out:
 	return 0;
 }
 
+static int ath12k_dp_rx_pdev_mon_status_detach(struct ath12k *ar)
+{
+	struct ath12k_pdev_dp *dp = &ar->dp;
+	struct ath12k_mon_data *pmon = dp->mon_data;
+
+	if (!pmon) {
+		ath12k_err(ar->ab, "pmon is NULL\n");
+		return -EINVAL;
+	}
+
+	kfree(pmon);
+	dp->mon_data = NULL;
+
+	return 0;
+}
+
 static int ath12k_dp_rx_pdev_mon_status_attach(struct ath12k *ar)
 {
 	struct ath12k_pdev_dp *dp = &ar->dp;
-	struct ath12k_mon_data *pmon = (struct ath12k_mon_data *)&dp->mon_data;
+	struct ath12k_mon_data *pmon;
+
+	pmon = kzalloc(sizeof(*pmon), GFP_KERNEL);
+	if (!pmon) {
+		ath12k_warn(ar->ab, "pmon allocation failed \n");
+		return -ENOMEM;
+	}
+
+	dp->mon_data = pmon;
 
 	skb_queue_head_init(&pmon->rx_status_q);
 
@@ -4786,7 +4810,6 @@ static int ath12k_dp_rx_pdev_mon_status_attach(struct ath12k *ar)
 int ath12k_dp_rx_pdev_mon_attach(struct ath12k *ar)
 {
 	struct ath12k_pdev_dp *dp = &ar->dp;
-	struct ath12k_mon_data *pmon = &dp->mon_data;
 	int ret = 0;
 
 	ret = ath12k_dp_rx_pdev_mon_status_attach(ar);
@@ -4801,13 +4824,23 @@ int ath12k_dp_rx_pdev_mon_attach(struct ath12k *ar)
 	if (!ar->ab->hw_params->rxdma1_enable)
 		return 0;
 
-	pmon->mon_last_linkdesc_paddr = 0;
-	pmon->mon_last_buf_cookie = DP_RX_DESC_COOKIE_MAX + 1;
-	spin_lock_init(&pmon->mon_lock);
+	dp->mon_data->mon_last_linkdesc_paddr = 0;
+	dp->mon_data->mon_last_buf_cookie = DP_RX_DESC_COOKIE_MAX + 1;
+	spin_lock_init(&dp->mon_data->mon_lock);
 
 	return 0;
 }
 
+void ath12k_dp_rx_pdev_mon_detach(struct ath12k_base *ab, const int pdev_idx)
+{
+	struct ath12k *ar = ab->pdevs[pdev_idx].ar;
+	int ret;
+
+	ret = ath12k_dp_rx_pdev_mon_status_detach(ar);
+	if (ret)
+		ath12k_warn(ar->ab, "pdev_mon_status_detach() failed %d\n", ret);
+}
+
 int ath12k_dp_rx_pktlog_start(struct ath12k_base *ab)
 {
 	/* start reap timer */
diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.h b/drivers/net/wireless/ath/ath12k/dp_rx.h
index dcefa20..8cd200d 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.h
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.h
@@ -126,6 +126,7 @@ int ath12k_dp_htt_tlv_iter(struct ath12k_base *ab, const void *ptr, size_t len,
 				       const void *ptr, void *data),
 			   void *data);
 int ath12k_dp_rx_pdev_mon_attach(struct ath12k *ar);
+void ath12k_dp_rx_pdev_mon_detach(struct ath12k_base *ab, const int pdev_idx);
 int ath12k_dp_rx_peer_frag_setup(struct ath12k *ar, const u8 *peer_mac, int vdev_id);
 
 int ath12k_dp_rx_pktlog_start(struct ath12k_base *ab);
-- 
2.17.1

