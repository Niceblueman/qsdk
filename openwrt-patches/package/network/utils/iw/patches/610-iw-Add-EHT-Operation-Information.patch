From 8be3d1a09996d931fe51443d9cc4a3126a7ea959 Mon Sep 17 00:00:00 2001
From: Sri Vidya Gunturi <quic_sgunturi@quicinc.com>
Date: Thu, 25 Apr 2024 12:12:02 +0530
Subject: [PATCH] Added EHT Operation Information

Signed-off-by: Sri Vidya Gunturi <quic_sgunturi@quicinc.com>
---
 scan.c | 37 +++++++++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)

diff --git a/scan.c b/scan.c
index 68a724c..cf81be7 100644
--- a/scan.c
+++ b/scan.c
@@ -2300,8 +2300,45 @@ static void print_he_capa(const uint8_t type, uint8_t len, const uint8_t *data,
 	print_he_capability(data, len);
 }
 
+static void print_eht_oper(const uint8_t type, uint8_t len, const uint8_t *data,
+			   const struct print_ies_data *ie_buffer)
+{
+	uint8_t channel_width = 0;
+	const char *chandwidths[] = {
+		[0] = "20 MHz",
+		[1] = "40 MHz",
+		[2] = "80 MHz",
+		[3] = "160 MHz",
+		[4] = "320 MHz",
+	};
+
+	printf("\n");
+	printf("\t\t * Basic EHT-MCS And Nss Set: 0x%.2x%.2x%.2x%.2x\n",
+			data[4], data[3], data[2], data[1]);
+	/* Channel Width and CCFS Information is only available
+	 * for 320 MHz EHT Mode in the beacon frame.
+	 * For Other Channel Widths, Only "MCS and Nss set" information is
+	 * available in the beacon.
+	 */
+	if ((len >= 8) && (len <=10))
+	{
+		channel_width = (data[5] & 0x07);
+		printf("\t\t * channel width: %d (%s)\n", channel_width,
+				channel_width < ARRAY_SIZE(chandwidths) ? chandwidths[channel_width] : "unknown");
+		printf("\t\t * center freq segment 1: %d\n", data[6]);
+		printf("\t\t * center freq segment 2: %d\n", data[7]);
+	}
+
+	if (len == 10)
+	{
+		printf("\t\t * Disabled Subchannel Bitmap: 0x%.2x%.2x\n",
+				data[9], data[8]);
+	}
+}
+
 static const struct ie_print ext_printers[] = {
 	[35] = { "HE capabilities", print_he_capa, 21, 54, BIT(PRINT_SCAN), },
+	[106] = { "EHT Operation", print_eht_oper, 5, 11, BIT(PRINT_SCAN), },
 };
 
 static void print_extension(unsigned char len, unsigned char *ie,
-- 
2.17.1

